version: 2.1
orbs:
  prodvana: prodvana/prodvana@dev:<<pipeline.git.revision>>
  orb-tools: circleci/orb-tools@11.5

filters: &filters
  tags:
    only: /.*/

commands:
  save-version:
    description: "Persist the current version of the given service to a file"
    parameters:
      app:
        type: string
        description: "app the service belongs to"
      service:
        type: string
        description: "name of the service to check"
      channel:
        type: string
        description: "which release channel to check"
      version-path:
        type: string
        description: "file path where the version will be stored"
        default: "version"
    steps:
      - run:
          name: Save Current Service Version
          command: |
            set -euxo pipefail
            pvnctl services --app <<parameters.app>> list  -f json | jq ".[] | select(.service | contains(\"<<parameters.service>>\")) | select(.releaseChannel | contains(\"<<parameters.channel>>\")) | .version" > <<parameters.version-path>>

  validate-push:
    description: "Validate that the push was successful"
    parameters:
      app:
        type: string
        description: "app the service belongs to"
      service:
        type: string
        description: "name of the service to check"
      channel:
        type: string
        description: "which release channel to check"
      last-version-path:
        type: string
        description: "path to file with the last version saved"
        default: "version"
    steps:
      - run:
          name: Validate Push
          command: |
            set -euxo pipefail
            version=$(pvnctl services --app <<parameters.app>> list  -f json | jq ".[] | select(.service | contains(\"<<parameters.service>>\")) | select(.releaseChannel | contains(\"<<parameters.channel>>\")) | .version")
            [[ "${version}" != "$(cat <<parameters.last-version-path>>)" ]]
jobs:
  command-tests:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - prodvana/install-pvnctl
      - run:
          name: Verify Install
          command: command -v pvnctl
      - prodvana/setup-auth:
          org: prodvana-cont-testing-prod
          context: test-context
      - run:
          name: Verify Auth
          command: |
            set -euxo pipefail
            pvnctl auth context use test-context
            [[ -z "$(pvnctl services --app=default list  -f json | jq '.[] | select(.service | contains(\"orb-test\"))')" ]]
      - save-version:
          app: default
          service: orb-test
          channel: staging
      - prodvana/push:
          auth-context: test-context
          app: default
          service: orb-test
          docker-image: "index.docker.io/prodvana/demo_api:v4"
          wait-channels: staging
      - validate-push:
          app: default
          service: orb-test
          channel: staging
      - prodvana/apply:
          auth-context: test-context
          type: runtimes
          path: testdata/configs/runtimes/*
workflows:
  test-deploy:
    jobs:
      - command-tests:
          filters: *filters
      - prodvana/push:
          name: test-push-job
          app: default
          filters: *filters
          org: prodvana-cont-testing-prod
          service: orb-test
          docker-image: "index.docker.io/prodvana/demo_api:v4"
          requires:
            - command-tests
      - prodvana/push:
          name: test-push-wait-job
          app: default
          filters: *filters
          org: prodvana-cont-testing-prod
          service: orb-test
          docker-image: "index.docker.io/prodvana/demo_api:v4"
          wait-channels: staging
          requires:
            - test-push-job
      - prodvana/push:
          name: test-push-multiprogram-job
          app: default
          filters: *filters
          org: prodvana-cont-testing-prod
          service: orb-test-multiprogram
          docker-image: program-0=index.docker.io/prodvana/demo_api:v4,program-1=index.docker.io/hashicorp/http-echo:0.2.3
          wait-channels: staging
          requires:
            - command-tests
      - prodvana/push:
          name: test-push-by-release-channel-job
          app: orb-test
          filters: *filters
          org: prodvana-cont-testing-prod
          service: orb-test-by-release-channel
          docker-image-by-release-channel: staging=index.docker.io/prodvana/demo_api:v4,dogfood=index.docker.io/prodvana/demo_api:v3
          wait-channels: staging,dogfood
          requires:
            - command-tests
      - orb-tools/pack:
          filters: *filters
      - orb-tools/publish:
          orb-name: prodvana/prodvana
          vcs-type: << pipeline.project.type >>
          pub-type: production
          requires:
            - test-push-job
            - test-push-wait-job
            - test-push-multiprogram-job
            - orb-tools/pack
            - command-tests
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
